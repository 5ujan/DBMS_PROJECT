CREATE TABLE DONORS (
    donor_id varchar(50),                     -- The unique ID of the donor (either volunteer or organization)
    donor_type ENUM('individual', 'organization') NOT NULL, -- Type of donor (individual or organization)
    email VARCHAR(255) NOT NULL UNIQUE,             -- Email of the donor (unique)
    name VARCHAR(255) NOT NULL,                     -- Name (common for both)
    FOREIGN KEY (donor_id) REFERENCES VOLUNTEER(volunteer_id) ON DELETE CASCADE,  -- For individual donors, references VOLUNTEER
    FOREIGN KEY (donor_id) REFERENCES ORGANIZATION(organization_id) ON DELETE CASCADE  -- For organization donors, references ORGANIZATION
);

CREATE TABLE VOLUNTEER (
    volunteer_id VARCHAR(50) PRIMARY KEY,          -- UUID (string) generated by backend
    email VARCHAR(255) NOT NULL UNIQUE,        -- Email for login
    password VARCHAR(255) NOT NULL,            -- Password for login
    name VARCHAR(255) NOT NULL,                -- Full Name
    dob DATE NOT NULL,                         -- Date of Birth
    phone VARCHAR(15) NOT NULL,                -- Phone Number
    gender ENUM('male', 'female') NOT NULL,    -- Gender (male or female)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp for record creation
);

-- Create the ORGANIZATION table
CREATE TABLE ORGANIZATION (
    organization_id VARCHAR(50) PRIMARY KEY,       -- UUID (string) generated by backend
    email VARCHAR(255) NOT NULL UNIQUE,         -- Email for login
    password VARCHAR(255) NOT NULL,             -- Password for login
    organization_name VARCHAR(255) NOT NULL,    -- Organization Name
    established_date DATE NOT NULL,             -- Established Date
    contact_email VARCHAR(255) NOT NULL,        -- Contact Email
    contact_phone VARCHAR(15) NOT NULL,         -- Contact Phone
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp for record creation
);

CREATE TABLE VOLUNTEER_ORGANIZATION (
    volunteer_id VARCHAR(50),                              -- UUID from VOLUNTEER
    organization_id VARCHAR(50),                          -- UUID from ORGANIZATION
    start_date DATE NOT NULL,
    end_date DATE,
    PRIMARY KEY (volunteer_id, organization_id),
    FOREIGN KEY (volunteer_id) REFERENCES VOLUNTEER(volunteer_id),
    FOREIGN KEY (organization_id) REFERENCES ORGANIZATION(organization_id)
);

CREATE TABLE SKILLS (
    skill_id INT AUTO_INCREMENT PRIMARY KEY,
    skill_name VARCHAR(255) NOT NULL,
    description TEXT
);

-- VOLUNTEER_SKILLS Table
CREATE TABLE VOLUNTEER_SKILLS (
    volunteer_id VARCHAR(50),                              -- UUID from VOLUNTEER
    skill_id INT,
    proficiency_level VARCHAR(50),
    PRIMARY KEY (volunteer_id, skill_id),
    FOREIGN KEY (volunteer_id) REFERENCES VOLUNTEER(volunteer_id),
    FOREIGN KEY (skill_id) REFERENCES SKILLS(skill_id)
);

CREATE TABLE PROGRAMMES (
    programme_id varchar(50) PRIMARY key ,
    organization_id varCHAR(50),                          -- UUID from ORGANIZATION
    programme_name VARCHAR(255) NOT NULL,
    description TEXT,
    start_date DATE NOT NULL,
    end_date DATE,
    FOREIGN KEY (organization_id) REFERENCES ORGANIZATION(organization_id)
);

CREATE TABLE VOLUNTEER_PROGRAMMES (
    volunteer_id varCHAR(50),                              -- UUID from VOLUNTEER
    programme_id varchar(50),
    registration_date DATE NOT NULL,
    status VARCHAR(50),
    PRIMARY KEY (volunteer_id, programme_id),
    FOREIGN KEY (volunteer_id) REFERENCES VOLUNTEER(volunteer_id),
    FOREIGN KEY (programme_id) REFERENCES PROGRAMMES(programme_id)
);

CREATE TABLE DONATIONS (
    donation_id varchar(50) PRIMARY KEY,
    donor_id varchar(50),
    programme_id varchar(50),
    amount FLOAT NOT NULL,
    donation_date DATE NOT NULL,
    FOREIGN KEY (donor_id) REFERENCES DONORS(donor_id),
    FOREIGN KEY (programme_id) REFERENCES PROGRAMMES(programme_id)
);